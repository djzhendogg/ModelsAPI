import numpy as np
from utils import process_sequence, load_model

model, pca, unique_kmers = load_model()
def predict(nanobody_seq, antigen_seq):
    """Возвращает метку класса (0 - нет связывания, 1 -есть связывание)"""
    # Обработка последовательностей
    nb_vec = process_sequence(nanobody_seq, unique_kmers)
    ag_vec = process_sequence(antigen_seq, unique_kmers)

    # Объединение признаков
    combined = np.concatenate([nb_vec, ag_vec])

    # Применение PCA
    combined_pca = pca.transform([combined])

    # Предсказание
    ans = model.predict(combined_pca)[0]
    if ans == 1:
        return True
    else:
        return False


# Пример использования
if __name__ == "__main__":
    nb_seq = 'GSQVQLVESGGGPVEAGGSLRLSCAASGRSFSNSVMAWFRQAPGKEREFLSVLNWSSGRTSIADSVKGRFTMSRDPAKITVYLQMNGLKPEDTAVYYCAASNRGSLYTLDNQNRYEDWGQGTQVTVSS'
    ag_seq = 'MFNKSFGTPFGGSTGGFGTTSTFGQNTGFGTTSGGAFGTSAFGSSNNTGGLFGNSQTKPGGLFGTSSFSQPATSTSTGFGFGTSTGTSNSLFGTASTGTSLFSSQNNAFAQNKPTGFGNFGTSTSSGGLFGTTNTTSNPFGSTSGSLFGPSSFTAAPTGTTIKFNPPTGTDTMVKAGVSTNISTKHQCITAMKEYESKSLEELRLEDYQANRKGPQNQVGGGTTAGLFGSSPATSSATGLFSSSTTNSAFSYGQNKTAFGTSTTGFGTNPGGLFGQQNQQTTSLFSKPFGQATTTPNTGFSFGNTSTLGQPSTNTMGLFGVTQASQPGGLFGTATNTSTGTAFGTGTGLFGQPNTGFGAVGSTLFGNNKLTTFGTSTTSAPSFGTTSGGLFGNKPTLTLGTNTNTSNFGFGTNNSGSSIFGSKPAAGTLGTGLGTGFGTALGAGQASLFGNNQPKIGGPLGTGAFGAPGFNTSTAILGFGAPQAPVALTDPNASAAQQAVLQQHLNSLTYSPFGDSPLFRNPMSDPKKKEERLKPTNPAAQKALTTPTHYKLTPRPATRVRPKALQTTGTAKSHLFDGLDDDEPSLANGAFMPKKSIKKLVLKNLNNSNLFSPVNHDSEDLASPSEYPENGERFSFLSKPVDENNQQDGEDDSLVSRFYTNPIAKPIPQTPESVGNKNNSSSNVEDTIVALNMRAALRNGLEGSSEETSFHDESLQDDREEIENNAYHIHPAGIVLTKVGYYTIPSMDDLAKITNEKGECIVSDFTIGRKGYGSIYFEGDVNLTNLNLDDIVHIRRKEVIVYVDDNQKPPVGEGLNRKAEVTLDGVWPTDKTSRCLIKSPDRLADINYEGRLEAVSRKQGAQFKEYRPETGSWVFKVSHFSKYGLQDSDEEEEEHPPKTTSKKLKTAPLPPAGQATTFQMTLNGKPAPPPQSQSPEVEQLGRVVELDSDMVDITQEPVPDSVLEESVPEDQEPVSASTHIASSLGINPHVLQIMKASLLVDEEDVDAMDQRFGHIPSKGETVQEICSPRLPISASHSSKSRSIVGGLLQSKFASGTFLSPSASVQECRTPRTSSRMNIPSTSPWSVPLPLATVFTVPSPAPEVQLKTVGIRRQPGLVPLEKSITYGKGKLLMDMALFMGRSFRVGWGPNWTLANSGEQLHGSHELENHQVADSMEYGFLPNPVAVKSLSESPFKVHLEKLGLRQRKLDEDLQLYQTPLELKLKHSTVHVDELCPLIVPNPGVSVIHDYADWVKDSPGDFLELPIVKHWSLTWTLCEALWGHLKELDGQLDEPSEYIQTLERRRAFSRWLSHTAAPQIEEEVSLTRRDSPVEAVFSYLTGSRISGACCLAQQSGDHRLALLLSQLVGSQSVRELLTMQLADWHQLQADSFIHDERLRIFALLAGKPVWQLSEQKQINVCSQLDWKRTLAIHLWYLLPPTASISRALSMYEEAFQNTPEGDKYACSPLPSYLEGCGCMVEEEKDSRRPLQDVCFHLLKLYSDRHYELNQLLEPRSITADPLDYRLSWHLWEVLRALNYTHLSEQCEGVLQASYAGQLESEGLWEWAIFVFLHIDNSGMREKAVRELLTRHCQLSETPESWAKEAFLTQKLCVPAEWIHEAKAVRAHMESNKHLEALYLFKAGHWNRCHKLVIRHLASDAIINENYDYLKGFLEDLAPPERSSLIQDWETSGLVYLDYIRVIEMLHRIQQVDCSGYELEHLHTKVTSLCNRIEQIPCYNAKDRLAQSDMAKRVANLLRVVLSLQHAPDATSNSTPDPQRVPLRLLAPHIGRLPMPEDYALEELRGLTQSYLRELTVGSQ'

    probability = predict(nb_seq, ag_seq)
    print(probability)